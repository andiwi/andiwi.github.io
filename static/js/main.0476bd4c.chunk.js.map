{"version":3,"sources":["components/TypeItHeader.tsx","theme.ts","components/ContactContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","text","wordBreak","TypeItHeader","classes","useEffect","TypeIt","strings","speed","lifeLike","cursor","breakLines","loop","waitUntilVisible","nextStringDelay","go","Typography","variant","id","className","palette","primary","main","light","dark","contrastText","secondary","background","default","breakpoints","createBreakpoints","theme","createMuiTheme","typography","fontFamily","join","overrides","MuiTypography","h1","fontWeight","fontSize","up","h2","body1","MuiCardHeader","title","MuiButton","containedPrimary","backgroundColor","contactContainer","height","padding","spacing","mailTo","color","fabLarge","width","ContactContainer","Grid","container","direction","justify","animateIn","duration","animateOnce","item","alignItems","Fab","href","landingContainer","minHeight","fallbacks","paddingLeft","paddingRight","titleColumn","paddingTop","paragraphColumn","paddingBottom","justifyContent","imgContainer","marginTop","img","borderRadius","boxShadow","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","offset","src","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0476bd4c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport TypeIt from \"typeit\";\nimport { Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  text: {\n    wordBreak: \"break-all\"\n  }\n});\n\nexport default function TypeItHeader() {\n  const classes = useStyles();\n\n  useEffect(() => {\n    new TypeIt(\"#typeItElement\", {\n      strings: [\n        \"Web </br> Developer\",\n        \"AI </br> Engineer\",\n        \"Blockchain </br> Expert\",\n        \"Entrepreneur\",\n        \"Andreas </br> Wittmann\"\n      ],\n      speed: 70,\n      lifeLike: true,\n      cursor: true,\n      breakLines: false,\n      loop: false,\n      waitUntilVisible: false,\n      nextStringDelay: 1100\n    }).go();\n  }, []);\n\n  return (\n    <Typography\n      variant=\"h1\"\n      id=\"typeItElement\"\n      className={classes.text}\n    ></Typography>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core\";\nimport createBreakpoints from \"@material-ui/core/styles/createBreakpoints\";\n\nconst palette = {\n  //primary: { main: \"#96DACD\", contrastText: \"#1E2226\" },\n  primary: {\n    main: \"#b9e8e8\",\n    light: \"#ecffff\",\n    dark: \"#88b6b6\",\n    contrastText: \"#000000\"\n  },\n  secondary: {\n    main: \"#d06162\",\n    light: \"#ff918f\",\n    dark: \"#9b3238\",\n    contrastText: \"#000000\"\n  },\n  background: {\n    default: \"#FFFFFF\"\n  }\n};\n\nconst breakpoints = createBreakpoints({});\n\nconst theme = createMuiTheme({\n  palette,\n  breakpoints,\n  typography: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\")\n  },\n  overrides: {\n    MuiTypography: {\n      h1: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontWeight: \"bold\",\n        fontSize: \"4.5rem\",\n        [breakpoints.up(\"md\")]: {\n          fontSize: \"5rem\"\n        },\n        [breakpoints.up(\"xl\")]: {\n          fontSize: \"6rem\"\n        }\n      },\n      h2: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontWeight: \"normal\",\n        fontSize: \"2.5rem\",\n        [breakpoints.up(\"sm\")]: {\n          fontSize: \"5rem\"\n        }\n      },\n      body1: {\n        fontSize: \"1.5rem\",\n        [breakpoints.up(\"sm\")]: {\n          fontSize: \"2.5rem\"\n        }\n      }\n    },\n    MuiCardHeader: {\n      title: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontWeight: \"bold\",\n        fontSize: \"1.9rem\"\n      }\n    },\n    MuiButton: {\n      containedPrimary: {\n        backgroundColor: palette.primary.dark,\n\n        \"&:hover\": {\n          backgroundColor: palette.primary.main\n        }\n      }\n    }\n  }\n});\nexport default theme;\n","import React from \"react\";\nimport { makeStyles, Grid, Typography, Fab } from \"@material-ui/core\";\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\nimport theme from \"../theme\";\n\nconst useStyles = makeStyles({\n  contactContainer: {\n    height: \"100vh\",\n    padding: theme.spacing(1)\n  },\n  mailTo: {\n    color: theme.palette.primary.contrastText\n  },\n  fabLarge: {\n    width: 80,\n    height: 80,\n    \"& .MuiSvgIcon-root\": {\n      fontSize: \"2.5rem\"\n    }\n  }\n});\n\nexport default function ContactContainer() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      className={classes.contactContainer}\n      direction=\"column\"\n      justify=\"space-between\"\n    >\n      <ScrollAnimation animateIn=\"fadeIn\" duration={0.5} animateOnce={true}>\n        <Typography variant=\"h2\">\n          Hast du ein Projekt, eine App oder Idee bei der du meine Unterstützung\n          benötigen könntest? Schreibe mir eine kurze Nachricht.\n        </Typography>\n      </ScrollAnimation>\n      <Grid item direction=\"column\" container alignItems=\"center\">\n        <Fab\n          color=\"primary\"\n          className={classes.fabLarge}\n          href=\"mailto:mail@andreaswittmann.com\"\n        >\n          <EmailOutlinedIcon />\n        </Fab>\n        <Typography variant=\"body1\" className={classes.mailTo}>\n          <a className={classes.mailTo} href=\"mailto:mail@andreaswittmann.com\">\n            mail@andreaswittmann.com\n          </a>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { CssBaseline, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport Img from \"react-image\";\nimport TypeItHeader from \"./components/TypeItHeader\";\nimport ContactContainer from \"./components/ContactContainer\";\nimport theme from \"./theme\";\n\nconst useStyles = makeStyles({\n  landingContainer: {\n    minHeight: \"100vh\",\n    background:\n      \"linear-gradient(to top, #BAE8E8 50%, #deecdd 100%)\" /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */,\n    fallbacks: [\n      {\n        // @ts-ignore\n        background:\n          \"-webkit-linear-gradient(to bottom, #BAE8E8, #deecdd)\" /* Chrome 10-25, Safari 5.1-6 */\n      },\n      { background: \"#BAE8E8\" } /* fallback for old browsers */\n    ],\n    //backgroundImage: \"url('otis-redding.png')\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  titleColumn: {\n    paddingTop: theme.spacing(6),\n    minHeight: \"200px\"\n  },\n  paragraphColumn: {\n    paddingBottom: theme.spacing(6),\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  imgContainer: {\n    marginTop: \"auto\",\n    paddingBottom: theme.spacing(4),\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  img: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 50px 0px rgba(0,0,0,0.5)\",\n    width: \"200px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"300px\"\n    }\n  },\n  contactContainer: {\n    height: \"100vh\",\n    padding: theme.spacing(1)\n  },\n  mailTo: {\n    color: theme.palette.primary.contrastText\n  },\n  fabLarge: {\n    width: 80,\n    height: 80,\n    \"& .MuiSvgIcon-root\": {\n      fontSize: \"2.5rem\"\n    }\n  }\n});\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid container className={classes.landingContainer} direction=\"column\">\n        <Grid item className={classes.titleColumn}>\n          <TypeItHeader />\n        </Grid>\n\n        <Grid item container className={classes.imgContainer}>\n          <ScrollAnimation\n            animateIn=\"fadeIn\"\n            duration={0.5}\n            animateOnce={true}\n            offset={0}\n          >\n            <Img src=\"profile_400x400.jpg\" className={classes.img} />\n          </ScrollAnimation>\n        </Grid>\n        <Grid item className={classes.paragraphColumn} container>\n          <ScrollAnimation\n            animateIn=\"fadeIn\"\n            duration={0.5}\n            animateOnce={true}\n            offset={0}\n          >\n            <Typography variant=\"body1\">\n              <b>TL;DR:</b> Ich bringe deine IT-Projekte <i>zielstrebig</i> und{\" \"}\n              <i>effizient</i> zum Erfolg.\n            </Typography>\n          </ScrollAnimation>\n        </Grid>\n      </Grid>\n      <ContactContainer />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}